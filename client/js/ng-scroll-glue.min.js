!function(t){"use strict";function n(t,n,l){function o(t){var n=t;return{getValue:function(){return n},setValue:function(t){n=t}}}function e(t,n){return{getValue:function(){return t(n)},setValue:function(){}}}function r(t,n,l){return{getValue:function(){return t(l)},setValue:function(o){o!==t(l)&&l.$apply(function(){n(l,o)})}}}if(""!==n){var c=t(n);return void 0!==c.assign?r(c,c.assign,l):e(c,l)}return o(!0)}function l(l,r,c){l.directive(r,["$parse","$timeout","$window",function(l,u,i){return{priority:1,restrict:"A",link:function(s,f,a){function d(){g.getValue()&&!c.isAttached(V)&&c.scroll(V)}function h(){g.setValue(c.isAttached(V))}var g=n(l,a[r],s),p=t.element(i),V=f[0];s.$watch(d),u(d,0,!1),p.on(e,d),f.on(o,h),s.$on("$destroy",function(){p.off(e,d),f.off(o,h)})}}}])}var o="scroll",e="resize",r={isAttached:function(t){return t.scrollTop+t.clientHeight+1>=t.scrollHeight},scroll:function(t){t.scrollTop=t.scrollHeight}},c={isAttached:function(t){return t.scrollTop<=1},scroll:function(t){t.scrollTop=0}},u={isAttached:function(t){return t.scrollLeft+t.clientWidth+1>=t.scrollWidth},scroll:function(t){t.scrollLeft=t.scrollWidth}},i={isAttached:function(t){return t.scrollLeft<=1},scroll:function(t){t.scrollLeft=0}},s=t.module("ngScrollGlue",[]);l(s,"scrollGlue",r),l(s,"scrollGlueTop",c),l(s,"scrollGlueBottom",r),l(s,"scrollGlueLeft",i),l(s,"scrollGlueRight",u)}(angular);
//# sourceMappingURL=data:application/json;base64,
